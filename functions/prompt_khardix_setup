#!/usr/bin/zsh
# Khardix's new prompt theme for zsh

autoload -Uz vcs_info

function prompt_khardix_help {
    cat <<'EOF'
This prompt is configurable via zsh styles:

    Colors (:prompt:khardix:color, use zsh/terminfo values):
        user-name: regular user name [default: 'red'].
        root-name: root user name [default: 208 (orange)].
        local-host: local host name [default: 'red'].
        remote-host: remote host name [default: 'yellow'].

        path: path components (working directory, etc.) [default: 'yellow'].

        branch-clean: VCS branch name without uncommited changes [default: 'green'].
        branch-dirty: VCS branch name with uncommited changes [default: 'red'].
        commit-diff: number of missing commits in local/remote repo [default: 208 (orange)].
EOF
}

# Helper functions

# Draw a separator and a block around a text
function +khardix-block {
    local text="${1}"
    local sep="${2:-─}"

    echo -n "${sep}[${text}]"
}

# VCS info hooks

# Indicate repo/branch status by changing branch color
function +vi-git_clean_branch
{
    local clean dirty
    zstyle -s ':prompt:khardix:color' branch-clean clean; clean=${clean:-'green'}
    zstyle -s ':prompt:khardix:color' branch-dirty dirty; dirty=${dirty:-'red'}

    if  [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) == 'true' ]] \
        && git status --porcelain | grep '??\|M' &>/dev/null
    then
        hook_com[branch]="%F{$dirty}${hook_com[branch]}%f"
    else
        hook_com[branch]="%F{$clean}${hook_com[branch]}%f"
    fi
}

# Look up the commit difference between local and remote HEAD
function +vi-git_commit_difference
{
    local count
    zstyle -s ':prompt:khardix:color' commit-diff count; count=${count:-'208'}

    local ahead=$(git rev-list ${hook_com[branch_orig]}@{upstream}..HEAD 2>/dev/null | wc -l)
    local behind=$(git rev-list HEAD..${hook_com[branch_orig]}@{upstream} 2>/dev/null | wc -l)

    # Add bold face to non-zero commit numbers
    function bolden { (( $1 )) && echo "%B$1%b" || echo "$1" }
    ahead="$(bolden $ahead)"
    behind="$(bolden $behind)"

    local -a colored_status=(
        "%F{$count}${ahead}%f"
        '%F{27}%B⇅%b%f'
        "%F{$count}${behind}%f"
    )

    hook_com[misc]="${(j::)colored_status}"
}

# Other hooks and hook-like functions
function +khardix-pyvenv
{
    [[ -n "$VIRTUAL_ENV" ]] || return  # no-op if no virtual env is active
    # Detect Python 3
    if [[ -x "$VIRTUAL_ENV"/**/python3(#qY1) ]]; then
        local color='green'
    else
        local color='cyan'
    fi

    echo "$(+khardix-block %F{$color}∫:$(basename "$VIRTUAL_ENV")%f)"
}

# Main theme setup function
function prompt_khardix_setup
{
    # Turn on required prompt options
    prompt_opts=(cr sp percent subst)

    # Current user and host name
    function identity {

        # Load colors from zstyle definitions
        local user root localhost remote
        zstyle -s :prompt:khardix:color user-name user; user=${user:-'red'}
        zstyle -s :prompt:khardix:color root-name root; root=${root:-'208'}
        zstyle -s :prompt:khardix:color local-host localhost; localhost=${localhost:-'red'}
        zstyle -s :prompt:khardix:color remote-host remote; remote=${remote:-'yellow'}

        local name_color="%(!.$root.$user)"
        local host_color="$(
            [[ -z "$SSH_CLIENT" ]] && echo "$localhost" || echo "$remote"
        )"

        # bold & colored name@host
        echo -n "%{%B%F{$name_color}%}%n%{%f%b%}@%{%B%F{$host_color}%}%m%{%f%b%}"
    }

    function working_directory {
        local path_color
        zstyle -s :prompt:khardix:color path path_color; path_color=${path_color:-'yellow'}

        echo -n "%{%F{$path_color}%}%3~%{%f%}"
    }

    function exit_code {
        local color_fail='red' color_other='yellow'

        echo -n "?:%B%(1?.%F{$color_fail}.%F{$color_other})%?%f%b"
    }

    # VCS status
    function query_vcs {
        vcs_info 'khardix'
    }

    add-zsh-hook precmd query_vcs

    local -r normal_form='%b:%m:%F{yellow}%.7i%f'  # VCS format in normal circumstances
    local -r action_form='%F{magenta}%a%f on '${normal_form}  # VCS format when an action is going on

    zstyle ':vcs_info:git:khardix:*' formats "$(+khardix-block ${normal_form})"
    zstyle ':vcs_info:git:khardix:*' actionformats "$(+khardix-block ${action_form})"
    zstyle ':vcs_info:*:khardix:*' get-revision 'true'
    zstyle ':vcs_info:*:khardix:*' use-prompt-escapes 'true'

    zstyle ':vcs_info:git+set-message:*' hooks git_clean_branch git_commit_difference

    # === Assemble the prompts ===
    local -a ps1_line1=(
        "$(+khardix-block $(identity) ╭)"
        "$(+khardix-block $(working_directory))"
        "%(?..$(+khardix-block "$(exit_code)"))"
        '$(+khardix-pyvenv)'  # Python virtual environment
        '${vcs_info_msg_0_}'  # VCS status
    )
    local -a ps1_line2=(
        "╰%# "
    )

    export PS1="${(j::)ps1_line1}"$'\n'"${(j::)ps1_line2}"
}

prompt_khardix_setup "$@"
