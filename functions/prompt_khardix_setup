#!/usr/bin/zsh
# Khardix's new prompt theme for zsh

autoload -Uz vcs_info

function prompt_khardix_help {
    cat <<'EOF'
This prompt is configurable via zsh styles:

    Colors (:prompt:khardix:color, use zsh/terminfo values):
        user-name: regular user name [default: 'red'].
        root-name: root user name [default: 208 (orange)].
        local-host: local host name [default: 'red'].
        remote-host: remote host name [default: 'yellow'].

        path: path components (working directory, etc.) [default: 'yellow'].

        branch-clean: VCS branch name without uncommited changes [default: 'green'].
        branch-dirty: VCS branch name with uncommited changes [defualt: 'red'].
EOF
}

# VCS info hooks

# Indicate repo/branch status by changing branch color
function +vi-git_clean_branch
{
    local clean dirty
    zstyle -s ':prompt:khardix:color' branch-clean clean; clean=${clean:-'green'}
    zstyle -s ':prompt:khardix:color' branch-dirty dirty; dirty=${dirty:-'red'}

    if  [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) == 'true' ]] \
        && git status --porcelain | grep '??\|M' &>/dev/null
    then
        hook_com[branch]="%F{$dirty}${hook_com[branch]}%f"
    else
        hook_com[branch]="%F{$clean}${hook_com[branch]}%f"
    fi
}

# Main theme setup function
function prompt_khardix_setup
{
    # Turn on required prompt options
    prompt_opts=(cr sp percent subst)

    # Draw a block around text
    function block {
        echo -n "[$1]"
    }

    # Current user and host name
    function identity {

        # Load colors from zstyle definitions
        local user root localhost remote
        zstyle -s :prompt:khardix:color user-name user; user=${user:-'red'}
        zstyle -s :prompt:khardix:color root-name root; root=${root:-'208'}
        zstyle -s :prompt:khardix:color local-host localhost; localhost=${localhost:-'red'}
        zstyle -s :prompt:khardix:color remote-host remote; remote=${remote:-'yellow'}

        local name_color="%(!.$root.$user)"
        local host_color="$(
            [[ -z "$SSH_CLIENT" ]] && echo "$localhost" || echo "$remote"
        )"

        # bold & colored name@host
        echo -n "%{%B%F{$name_color}%}%n%{%f%b%}@%{%B%F{$host_color}%}%m%{%f%b%}"
    }

    function working_directory {
        local path_color
        zstyle -s :prompt:khardix:color path path_color; path_color=${path_color:-'yellow'}

        echo -n "%{%F{$path_color}%}%3~%{%f%}"
    }

    # VCS status
    function query_vcs {
        vcs_info 'khardix'
    }

    add-zsh-hook precmd query_vcs

    local -r normal_form='%b:%.7i'  # VCS format in normal circumstances
    local -r action_form='%F{magenta}%a%f on '${normal_form}  # VCS format when an action is going on

    zstyle ':vcs_info:git:khardix:*' formats "─$(block ${normal_form})"
    zstyle ':vcs_info:git:khardix:*' actionformats "─$(block ${action_form})"
    zstyle ':vcs_info:*:khardix:*' get-revision 'true'
    zstyle ':vcs_info:*:khardix:*' use-prompt-escapes 'true'

    zstyle ':vcs_info:git+set-message:*' hooks git_clean_branch

    # === Assemble the prompts ===
    local -a ps1_line1=(
        "╭$(block $(identity))"
        "─$(block $(working_directory))"
        '${vcs_info_msg_0_}'  # VCS status
    )
    local -a ps1_line2=(
        "╰%#» "
    )

    export PS1="${(j::)ps1_line1}"$'\n'"${(j::)ps1_line2}"
}

prompt_khardix_setup "$@"
