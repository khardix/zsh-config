# vim:set ft=zsh:
# 
# Defines environment for the login shell.
# System variables such as path should be set here (not zshenv), as the system
# defines it commonly in /etc/(z)profile and zshenv would get overwritten
#

# Editors
export EDITOR=vim
export GIT_EDITOR=$EDITOR

# Language
[[ -z "$LANG" ]] && export LANG='cs_CZ.UTF-8'

# ===== Paths =====
typeset -gU path cdpath fpath mailpath pythonpath manpath infopath # Disable duplicates in paths

# Binary search paths
local -a cond_path # Conditional paths

# gcc coloring
[ -d /usr/lib/colorgcc/bin ] && cond_path=($cond_path /usr/lib/colorgcc/bin)

# Ruby version manager binaries
[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm
[ -d $HOME/.rvm/bin ] && cond_path=($cond_path $HOME/.rvm/bin)

# Rust environment
[ -d $HOME/.cargo/bin ] && cond_path+="$HOME/.cargo/bin"

path=(
  ${HOME}/.local/bin
  ${cond_path}
  /usr/local/{bin,sbin}
  /usr/bin
  $path
)

# cd paths
cdpath=(
  .
  $HOME
  $cdpath
)

# Python path -- add /usr/local installations
pythonpath=(
  $pythonpath
  /usr/local/lib/python3.?/site-packages(N)
  /usr/local/lib/python2.?/site-packages(N)
)

# Custom man and info paths
infopath=(${HOME}/.local/share/info $infopath)
manpath=(${HOME}/.local/share/man $manpath)

# ===== Shell parameters =====
export REPORTTIME=5 # Report time if command takes more than 5 seconds

# ===== Compiler/Make =====
export CC=gcc
export CFLAGS="-std=c11 -pedantic -Wall -Wextra"

export CXX=g++
export CXXFLAGS="-std=c++14 -pedantic -Wall -Wextra"

# ===== XDG settings =====
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"

# ===== email =====
export MAILDIR="$HOME/system/mail"
[ -d "$MAILDIR" ] || mkdir -p "$MAILDIR"

# ===== Perl local lib =====
eval "$(perl -Mlocal::lib=$HOME/.local/perl5)"

# ===== Python virtualenv =====
export VIRTUAL_ENV_DISABLE_PROMPT=1

export WORKON_HOME="${XDG_CONFIG_HOME}/python/venv"
[ -d "${WORKON_HOME}" ] || mkdir -p "${WORKON_HOME}"

PROJECT_HOME="$HOME/projects/python"
[ -d "${PROJECT_HOME}" ] && export PROJECT_HOME

export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV="${HOME}/.local/bin/virtualenv"
VIRTUALENVWRAPPER_SCRIPT="${HOME}/.local/bin/virtualenvwrapper.sh"
[ -x "${VIRTUALENVWRAPPER_SCRIPT}" ] && source "${VIRTUALENVWRAPPER_SCRIPT}"

# ===== Other env variables =====
export NO_AT_BRIDGE=1

# GNOME Keyring
if [ -n "$DESKTOP_SESSION" ] && which gnome-keyring-daemon &>/dev/null; then
  eval $(gnome-keyring-daemon --start) && export SSH_AUTH_SOCK
fi

# ===== Export previously set variables ======
[ -x /usr/bin/systemctl ] && systemctl --user import-environment PATH NO_AT_BRIDGE DBUS_SESSION_BUS_ADDRESS
[ -x $HOME/.rvm/bin/rvm ] && rvm use default &>/dev/null
